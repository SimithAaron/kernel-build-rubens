name: Kernel Build

on:
  repository_dispatch:
    types: [manual-build]
  workflow_dispatch:

jobs:
 KernelSU:
    name: Build on ubuntu-latest
    runs-on: ubuntu-latest

    steps:
      - name: Set swap to 10G
        uses: pierotofy/set-swap-space@master
        with:
          swap-size-gb: 10
    
      - name: Install dependencies
        run: |
          cd $GITHUB_WORKSPACE
          mkdir K50 && cd K50
          sudo apt update && sudo apt install repo -y
          sudo git config --global user.name "root"
          sudo git config --global user.email "localhost"
          sudo timedatectl set-timezone Asia/Shanghai

      - name: Clone source code
        run: |
          repo init --depth=1 -u https://android.googlesource.com/kernel/manifest -b common-android12-5.10-2022-01 --repo-rev=v2.16
          sed -i 's/"android12-5.10-2022-01"/"deprecated\/android12-5.10-2022-01"/g' .repo/manifests/default.xml
          repo sync
          cd common
          curl -LSs "https://raw.githubusercontent.com/tiann/KernelSU/main/kernel/setup.sh" | bash -s main
          cd KernelSU
          echo "KSU_VERSION=$(($(git rev-list --count HEAD) + 10200))" >> $GITHUB_ENV

      - name: Build images
        run: |
          sed -i 's/ -dirty//g' common/scripts/setlocalversion
          sed -i 's/check_defconfig//g' common/build.config.gki
          LTO=thin BUILD_CONFIG=common/build.config.gki.aarch64 build/build.sh
          cd out/android12-5.10/dist
          export PATCH_LEVEL=2022-05
          export AVBTOOL=$GITHUB_WORKSPACE/build/build-tools/path/linux-x86/avbtool
          export GZIP=$GITHUB_WORKSPACE/prebuilts/build-tools/path/linux-x86/gzip
          export MKBOOTIMG=$GITHUB_WORKSPACE/tools/mkbootimg/mkbootimg.py
          export UNPACK_BOOTIMG=$GITHUB_WORKSPACE/tools/mkbootimg/unpack_bootimg.py
          curl -Lo gki-kernel.zip https://dl.google.com/android/gki/gki-certified-boot-android12-5.10-"${PATCH_LEVEL}"_r1.zip
          unzip gki-kernel.zip && rm gki-kernel.zip
          BOOT_IMG=$(find . -maxdepth 1 -name "boot*.img")
          $UNPACK_BOOTIMG --boot_img="$BOOT_IMG"
          rm "$BOOT_IMG"
          $GZIP -n -k -f -9 Image >Image.gz
          $MKBOOTIMG --header_version 4 --kernel Image.gz --output boot-gz.img --ramdisk out/ramdisk --os_version 12.0.0 --os_patch_level "${PATCH_LEVEL}"
          $AVBTOOL add_hash_footer --partition_name boot --partition_size $((64 * 1024 * 1024)) --image boot-gz.img --algorithm SHA256_RSA2048 --key $GITHUB_WORKSPACE/prebuilts/kernel-build-tools/linux-x86/share/avb/testkey_rsa2048.pem
          sudo tar -czvf boot-gz.tar.gz boot-gz.img
          
      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: 5.10.66_${{ env.KSU_VERSION }}
          path: out/android12-5.10/dist/boot-gz.tar.gz
  
      - name: Send Artifact to Telegram
        uses: ./.github/actions/telegram-bot
        with:
          token: ${{ secrets.BOT_TOKEN }}
          chat_id: ${{ secrets.CHAT_ID }}
          file_path: out/android12-5.10/dist/boot-gz.tar.gz
